# Copyright (c) Mondoo, Inc.
# SPDX-License-Identifier: BUSL-1.1

---
# download the latest json to fetch the latest released version

- name: Determine latest released version
  ansible.windows.win_uri:
    url: "{{ latest_version_url }}"
    return_content: yes
  register: latest_jsondata
  when: pkg_version_url is undefined

- name: Log latest version
  ansible.builtin.debug:
    var: latest_jsondata.json
  when: pkg_version_url is undefined

- name: Determine latest pkg version (amd64)
  ansible.builtin.set_fact:
    pkg_version_url: "{{ latest_jsondata.json | json_query(jmesquery) }}"
  vars:
    jmesquery: "files[*].filename | [?contains(@, 'amd64.msi')] | [0]"
  when: ansible_architecture2 | lower != 'arm64' and pkg_version_url is undefined

- name: Determine latest pkg version (arm64)
  ansible.builtin.set_fact:
    pkg_version_url: "{{ latest_jsondata.json | json_query(jmesquery) }}"
  vars:
    jmesquery: "files[*].filename | [?contains(@, 'arm64.msi')] | [0]"
  when: ansible_architecture2 | lower == 'arm64' and pkg_version_url is undefined

- name: Extract filename from the URL
  set_fact:
    pkg_filename: "{{ pkg_version_url | basename }}"

- name: Log latest version
  ansible.builtin.debug:
    var: pkg_version_url

- name: Log Filename
  ansible.builtin.debug:
    var: pkg_filename

- name: Create working directory
  ansible.builtin.file:
    path: "{{ mondoo_download_path }}"
    state: directory
    mode: "0755"
  delegate_to: localhost
  run_once: true
  become: false

- name: Set Mondoo Package variables
  ansible.builtin.set_fact:
    mondoo_pkg_src: "{{ mondoo_download_path }}/{{ pkg_filename }}"

- name: Download Mondoo Package
  ansible.builtin.get_url:
    url: "{{ pkg_version_url }}"
    dest: "{{ mondoo_pkg_src }}"
    mode: 440
  register: url_result
  until: url_result is not failed
  retries: 3
  delay: 10
  delegate_to: localhost
  become: false

- name: Set Monoo pkg path | Windows
  ansible.builtin.set_fact:
    mondoo_pkg_path: "{{ mondoo_tmp_windows }}\\{{ pkg_filename }}"

- name: Create working directory | Windows
  ansible.windows.win_file:
    path: "{{ mondoo_tmp_windows }}"
    state: directory

- name: Copy Mondoo Pkg | Windows
  ansible.windows.win_copy:
    src: "{{ mondoo_pkg_src }}"
    dest: "{{ mondoo_pkg_path }}"

# download and install msi
# we do register as part of the msi workflow to support reregistration more easily
- name: Install Mondoo msi package
  ansible.windows.win_package:
    path: "{{ mondoo_pkg_path }}"
    state: present

- name: Get current cnspec version
  ansible.windows.win_command: cnspec version
  args:
    chdir: "C:\\Program Files\\Mondoo"
  register: cnspec_version

- name: Log Cnspec Version
  ansible.builtin.debug:
    var: cnspec_version

- name: Ensure we have the latest os provider installed
  ansible.windows.win_command: cnspec providers install os
  args:
    chdir: "C:\\Program Files\\Mondoo"
  when: not ansible_check_mode and cnspec_version.stdout is match(".*cnspec 11.*")

- name: Logout cnquery and cnspec from Mondoo Platform
  ansible.windows.win_command: cnspec.exe logout --force --config C:\\ProgramData\\Mondoo\\mondoo.yml
  args:
    chdir: "C:\\Program Files\\Mondoo"
    # only run the command if no config file exists
    creates: C:\ProgramData\Mondoo\mondoo.yml
  when: force_registration
  # if the credentials are already invalid, the command will throw an error
  ignore_errors: true

- name: Remove existing credentials
  # ensure no configuration file exists if force mode was activated
  ansible.windows.win_file:
    state: absent
    path: C:\ProgramData\Mondoo\mondoo.yml
  when: force_registration

- name: Store cnspec login command as string
  ansible.builtin.set_fact:
    login_cmd: "cnspec.exe login --config C:\\ProgramData\\Mondoo\\mondoo.yml --token {{ registration_token }}"

- name: Add api-proxy to cnspec login command
  ansible.builtin.set_fact:
    login_cmd: "{{ login_cmd + ' --api-proxy ' + proxy_env['https_proxy'] }}"
  when: proxy_env['https_proxy'] is defined

- name: Add annotations to cnspec login command
  ansible.builtin.set_fact:
    login_cmd: "{{ login_cmd + ' --annotation ' + annotations }}"
  when: annotations | length > 0

- name: Add scan interval to cnspec login command
  ansible.builtin.set_fact:
    login_cmd: "{{ login_cmd + ' --timer ' + timer }}"
  when: timer | length > 0

- name: Add splay to cnspec login command
  ansible.builtin.set_fact:
    login_cmd: "{{ login_cmd + ' --splay ' + splay }}"
  when: splay | length > 0

- name: Login cnquery and cnspec
  ansible.windows.win_command: "{{ login_cmd }}"
  args:
    chdir: "C:\\Program Files\\Mondoo"
    # only run the command if no config file exists (was not deleted in non-force mode)
    creates: C:\ProgramData\Mondoo\mondoo.yml
  when: not ansible_check_mode

- name: Set Mondoo startup mode to auto and ensure it is started
  ansible.windows.win_service:
    name: Mondoo
    start_mode: delayed
    state: restarted
  when: not ansible_check_mode

- name: Ensure cnquery and cnspec are managed
  ansible.windows.win_command: cnspec.exe login
  args:
    chdir: "C:\\Program Files\\Mondoo"
  when: (ensure_managed_client is not undefined and ensure_managed_client) and not ansible_check_mode

- name: Store update command as string (Scheduled Task)
  ansible.builtin.set_fact:
    task_cmd: "-NoProfile -WindowStyle Hidden -ExecutionPolicy RemoteSigned -Command &{ [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $wc = New-Object Net.Webclient; "
  when: update_windows_enabled

- name: Add Proxy to Scheduled Task command
  ansible.builtin.set_fact:
    task_cmd: "{{ '$wc.proxy = New-Object System.Net.WebProxy(\"' + proxy_env['https_proxy'] + '\"); ' }}"
  when: proxy_env['https_proxy'] is defined and update_windows_enabled

- name: Add Install Powershell Script to Scheduled Task Command
  ansible.builtin.set_fact:
    task_cmd: "{{ task_cmd + 'iex ($wc.DownloadString(\\\"https://install.mondoo.com/ps1\\\")); Install-Mondoo -Service enable' }}"
  when: update_windows_enabled

- name: Add Proxy to Install command within Scheduled Task command
  ansible.builtin.set_fact:
    task_cmd: "{{ task_cmd + ' -Proxy \"' + proxy_env['https_proxy'] + '\"' }}"
  when: proxy_env['https_proxy'] is defined and update_windows_enabled

- name: Create the Windows Update Task for cnspec
  community.windows.win_scheduled_task:
    name: MondooUpdater
    description: Mondoo Updater Task
    actions:
      - path: Powershell.exe
        arguments: "{{ task_cmd + ';}' }}"
    triggers:
      - type: daily
        days_interval: "{{ update_windows_interval }}"
        start_boundary: "{{ update_windows_time }}"
        enabled: yes
    username: NT AUTHORITY\SYSTEM
    run_level: Highest
    compatibility: 4
    path: Mondoo
    state: present
    enabled: yes
  when: update_windows_enabled
